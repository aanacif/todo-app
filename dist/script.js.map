{"version":3,"sources":["script.js"],"names":["localStorageArray","JSON","parse","localStorage","getItem","newTaskInput","document","querySelector","taskList","arrayItems","setItem","stringify","task","completed","id","localStorageArrayUpdate","tasksLeftUpdate","tasksLeft","length","forEach","textContent","concat","addEventListener","entry","key","value","addTask","listTasks","Date","now","push","removeTask","filter","tasks","innerHTML","li","lastElementChild","setAttribute","appendChild","createTextNode","checkbox","nextElementSibling","classList","add","event","target","contains","parentElement","getAttribute","remove","firstElementChild","click","index","findIndex","checked","clearCompletedTasks","checkboxes","getElementsByClassName","x","filterTasksList","complete","arguments","undefined","style","display","activeFilterTab","tab","tabs","children","getElementById","theme","themeToggler","toggleLightMode","body","toggleDarkMode","themePreference","window","matchMedia","media"],"mappings":"AAAA,aACA,IAAMA,kBAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,sBAEpDC,aAAeC,SAASC,cAAc,mBAEtCC,SAAWF,SAASC,cAAc,cAEpCE,WAAa,GAGS,OAAtBT,mBACHG,aAAaO,QAAQ,oBAAqBT,KAAKU,UAAU,CACxD,CACCC,KAAM,oCACNC,WAAW,EACXC,GAAI,GAEL,CACCF,KAAM,yBACNC,WAAW,EACXC,GAAI,GAEL,CACCF,KAAM,wBACNC,WAAW,EACXC,GAAI,GAEL,CACCF,KAAM,kBACNC,WAAW,EACXC,GAAI,GAEL,CACCF,KAAM,oBACNC,WAAW,EACXC,GAAI,GAEL,CACCF,KAAM,uCACNC,WAAW,EACXC,GAAI,MAKPL,WAAaR,KAAKC,MAAMC,aAAaC,QAAQ,sBAG7C,IAAMW,wBAA0B,WAC/BZ,aAAaO,QAAQ,oBAAqBT,KAAKU,UAAUF,aACzDO,mBAIKA,gBAAkB,WACvB,IAAIC,EAAYR,WAAWS,OAC3BT,WAAWU,SAAQ,SAAAP,IACK,IAAnBA,EAAKC,WACRI,IAEwBX,SAASC,cAAc,qCAC/Ba,YAAjB,GAAAC,OAAkCJ,EAAlC,mBAKFZ,aAAaiB,iBAAiB,SAAS,SAACC,GACrB,UAAdA,EAAMC,KAAmC,KAAhBD,EAAME,QAClCC,QAAQrB,aAAaoB,OACrBpB,aAAaoB,MAAQ,GACrBE,UAAUlB,YACVO,sBAKF,IAAMU,QAAU,SAACH,GAChB,IAAMX,EACN,CACCA,KAAMW,EACNV,WAAW,EACXC,GAAIc,KAAKC,OAEVpB,WAAWqB,KAAKlB,GAChBG,2BAEKgB,WAAa,SAACjB,GACnBL,WAAaA,WAAWuB,QAAO,SAAApB,GAAI,OAAIA,EAAKE,IAAMA,KAClDC,2BAIKY,UAAY,SAACM,GAClBzB,SAAS0B,UAAY,GACrBD,EAAMd,SAAQ,SAAAP,GACbJ,SAAS0B,WAAT,oQAMA,IAAMC,EAAK3B,SAAS4B,iBACpBD,EAAGE,aAAa,UAAWzB,EAAKE,IACtBN,SAAS4B,iBAAiB7B,cAAc,mBAChD+B,YAAYhC,SAASiC,eAAe3B,EAAKA,OAC3C,IAAM4B,EAAWL,EAAG5B,cAAc,qBACX,IAAnBK,EAAKC,YACR2B,EAASH,aAAa,UAAW,IACjCG,EAASC,mBAAmBC,UAAUC,IAAI,qBAC1CH,EAASC,mBAAmBC,UAAUC,IAAI,kBAK7ChB,UAAUlB,YACVO,kBAGAR,SAASc,iBAAiB,SAAS,SAACsB,GACnC,GAAIA,EAAMC,OAAOH,UAAUI,SAAS,oBAAqB,CACxD,IAAMhC,EAAK8B,EAAMC,OAAOE,cAAcC,aAAa,WACnDjB,WAAWjB,GACX8B,EAAMC,OAAOE,cAAcE,SAE5BjC,qBAIDR,SAASc,iBAAiB,SAAS,SAACsB,GAC/BA,EAAMC,OAAOH,UAAUI,SAAS,mBACnCF,EAAMC,OAAOE,cAAcG,kBAAkBC,WAK/C3C,SAASc,iBAAiB,UAAU,SAACsB,GACpC,GAAIA,EAAMC,OAAOH,UAAUI,SAAS,mBAAoB,CACvD,IAAMM,EAAQ3C,WAAW4C,WAAU,SAAAzC,GAAI,OAAIA,EAAKE,IAAM8B,EAAMC,OAAOE,cAAcC,aAAa,eACjE,IAAzBJ,EAAMC,OAAOS,SAChB7C,WAAW2C,GAAOvC,WAAY,EAC9B+B,EAAMC,OAAOJ,mBAAmBC,UAAUC,IAAI,eAE9ClC,WAAW2C,GAAOvC,WAAY,EAC9B+B,EAAMC,OAAOJ,mBAAmBC,UAAUO,OAAO,cAGnDlC,0BACAC,qBAID,IAAMuC,oBAAsB,WAE3B,IADA,IAAMC,EAAalD,SAASmD,uBAAuB,mBAC1CC,EAAI,EAAGA,EAAIF,EAAWtC,OAAQwC,IACtC,IAA8B,IAA1BF,EAAWE,GAAGJ,QAAkB,CACnC,IAAMxC,EAAK0C,EAAWE,GAAGX,cAAcC,aAAa,WACpDjB,WAAWjB,GACX0C,EAAWE,GAAGX,cAAcE,WAMzBU,gBAAkB,WAAsB,IAArBC,EAAqBC,UAAA3C,OAAA,QAAA4C,IAAAD,UAAA,IAAAA,UAAA,GAC7ClC,UAAUlB,YAEV,IADA,IAAM+C,EAAalD,SAASmD,uBAAuB,mBAC1CC,EAAI,EAAGA,EAAIF,EAAWtC,OAAQwC,IAClCF,EAAWE,GAAGJ,UAAYM,IAC7BJ,EAAWE,GAAGX,cAAcgB,MAAMC,QAAU,SAKzCC,gBAAkB,WAEvB,IAFwC,IAAhBC,EAAgBL,UAAA3C,OAAA,QAAA4C,IAAAD,UAAA,GAAAA,UAAA,GAAV,MACxBM,EAAO7D,SAASC,cAAc,qCAAqC6D,SAChEV,EAAI,EAAGA,EAAIS,EAAKjD,OAAQwC,IAChCS,EAAKT,GAAGhB,UAAUO,OAAO,eAE1B3C,SAAS+D,eAAT,eAAAhD,OAAuC6C,IAAOxB,UAAUC,IAAI,gBAE7DsB,kBAKA,IAAIK,MAAQnE,aAAaC,QAAQ,SAC3BmE,aAAejE,SAASC,cAAc,iBAEtCiE,gBAAkB,WACvBlE,SAASmE,KAAK/B,UAAUC,IAAI,cAC5BxC,aAAaO,QAAQ,QAAS,SAC9B6D,aAAarC,UAAY,yTAEpBwC,eAAiB,WACtBpE,SAASmE,KAAK/B,UAAUO,OAAO,cAC/B9C,aAAaO,QAAQ,QAAS,QAC9B6D,aAAarC,UAAY,spBAE1BqC,aAAajD,iBAAiB,SAAS,WAExB,UADdgD,MAAQnE,aAAaC,QAAQ,UAE5BoE,kBAEAE,oBAKF,IAAMC,gBAAkBC,OAAOC,WAAW,gCAAgCC,MAClD,SAApBH,gBACHD,iBAEAF","file":"script.js","sourcesContent":["//Accessing task list on local storage\r\nconst localStorageArray = JSON.parse(localStorage.getItem('localStorageArray'))\r\n//new task input field\r\nconst newTaskInput = document.querySelector('.new-task-input')\r\n//task list ul\r\nconst taskList = document.querySelector('.task-list')\r\n//empty array\r\nlet arrayItems = []\r\n\r\n//default values\r\nif (localStorageArray === null) {\r\n\tlocalStorage.setItem('localStorageArray', JSON.stringify([\r\n\t\t{\r\n\t\t\ttask: 'Complete online JavaScript Course',\r\n\t\t\tcompleted: true,\r\n\t\t\tid: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\ttask: 'Jog around the park 3x',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: 2\r\n\t\t},\r\n\t\t{\r\n\t\t\ttask: '10 minutes meditation',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: 3\r\n\t\t},\r\n\t\t{\r\n\t\t\ttask: 'Read for 1 hour',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: 4\r\n\t\t},\r\n\t\t{\r\n\t\t\ttask: 'Pick up groceries',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: 5\r\n\t\t},\r\n\t\t{\r\n\t\t\ttask: 'Complete Todo App on Frontend Mentor',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: 6\r\n\t\t},\r\n\t]));\r\n}\r\n\r\narrayItems = JSON.parse(localStorage.getItem('localStorageArray'))\r\n\r\n//updates local storage array\r\nconst localStorageArrayUpdate = () => {\r\n\tlocalStorage.setItem('localStorageArray', JSON.stringify(arrayItems))\r\n\ttasksLeftUpdate()\r\n}\r\n\r\n//updating items left element\r\nconst tasksLeftUpdate = () => {\r\n\tlet tasksLeft = arrayItems.length\r\n\tarrayItems.forEach(task => {\r\n\t\tif (task.completed === true) {\r\n\t\t\ttasksLeft--\r\n\t\t}\r\n\t\tconst tasksLeftElement = document.querySelector('.card-container-footer-items-left')\r\n\t\ttasksLeftElement.textContent = `${tasksLeft} items left`\r\n\t})\r\n}\r\n\r\n//listening for new entries on input field\r\nnewTaskInput.addEventListener('keyup', (entry) => {\r\n\tif (entry.key === 'Enter' && entry.value !== '') {\r\n\t\taddTask(newTaskInput.value)\r\n\t\tnewTaskInput.value = ''\r\n\t\tlistTasks(arrayItems)\r\n\t\ttasksLeftUpdate()\r\n\t}\r\n})\r\n\r\n//task adding function\r\nconst addTask = (entry) => {\r\n\tconst task =\r\n\t{\r\n\t\ttask: entry,\r\n\t\tcompleted: false,\r\n\t\tid: Date.now()\r\n\t}\r\n\tarrayItems.push(task)\r\n\tlocalStorageArrayUpdate()\r\n}\r\nconst removeTask = (id) => {\r\n\tarrayItems = arrayItems.filter(task => task.id != id);\r\n\tlocalStorageArrayUpdate();\r\n};\r\n\r\n//listing/refreshing task list\r\nconst listTasks = (tasks) => {\r\n\ttaskList.innerHTML = ''\r\n\ttasks.forEach(task => {\r\n\t\ttaskList.innerHTML += `\r\n\t\t<li class=\"task-list-item\">\r\n\t\t\t\t\t<input type=\"checkbox\" aria-label=\"todo complete\" class=\"task-list-check\">\r\n\t\t\t\t\t<p class=\"task-list-text\"></p>\r\n\t\t\t\t\t<button class=\"task-list-remove\" aria-label=\"remove item\"></button>\r\n\t\t\t\t</li>\t`\r\n\t\tconst li = taskList.lastElementChild\r\n\t\tli.setAttribute('data-id', task.id)\r\n\t\tconst p = taskList.lastElementChild.querySelector('.task-list-text')\r\n\t\tp.appendChild(document.createTextNode(task.task))\r\n\t\tconst checkbox = li.querySelector('.task-list-check');\r\n\t\tif (task.completed === true) {\r\n\t\t\tcheckbox.setAttribute('checked', '');\r\n\t\t\tcheckbox.nextElementSibling.classList.add('new-task-complete');\r\n\t\t\tcheckbox.nextElementSibling.classList.add('completed')\r\n\t\t}\r\n\t});\r\n}\r\n\r\nlistTasks(arrayItems)\r\ntasksLeftUpdate()\r\n\r\n//task deleting function\r\ntaskList.addEventListener('click', (event) => {\r\n\tif (event.target.classList.contains('task-list-remove')) {\r\n\t\tconst id = event.target.parentElement.getAttribute('data-id')\r\n\t\tremoveTask(id)\r\n\t\tevent.target.parentElement.remove()\r\n\t}\r\n\ttasksLeftUpdate()\r\n})\r\n\r\n//marking checkbox completed when clicking on task\r\ntaskList.addEventListener('click', (event) => {\r\n\tif (event.target.classList.contains('task-list-text')) {\r\n\t\tevent.target.parentElement.firstElementChild.click()\r\n\t}\r\n})\r\n\r\n//when activating checkbox, apply class to blur task\r\ntaskList.addEventListener('change', (event) => {\r\n\tif (event.target.classList.contains('task-list-check')) {\r\n\t\tconst index = arrayItems.findIndex(task => task.id == event.target.parentElement.getAttribute('data-id'))\r\n\t\tif (event.target.checked === true) {\r\n\t\t\tarrayItems[index].completed = true\r\n\t\t\tevent.target.nextElementSibling.classList.add('completed')\r\n\t\t} else {\r\n\t\t\tarrayItems[index].completed = false\r\n\t\t\tevent.target.nextElementSibling.classList.remove('completed')\r\n\t\t}\r\n\t}\r\n\tlocalStorageArrayUpdate()\r\n\ttasksLeftUpdate()\r\n})\r\n\r\n//clear completed tasks function\r\nconst clearCompletedTasks = () => {\r\n\tconst checkboxes = document.getElementsByClassName('task-list-check')\r\n\tfor (let x = 0; x < checkboxes.length; x++) {\r\n\t\tif (checkboxes[x].checked === true) {\r\n\t\t\tconst id = checkboxes[x].parentElement.getAttribute('data-id')\r\n\t\t\tremoveTask(id)\r\n\t\t\tcheckboxes[x].parentElement.remove()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//filtering tasks\r\nconst filterTasksList = (complete = false) => {\r\n\tlistTasks(arrayItems)\r\n\tconst checkboxes = document.getElementsByClassName('task-list-check')\r\n\tfor (let x = 0; x < checkboxes.length; x++) {\r\n\t\tif (checkboxes[x].checked === complete) {\r\n\t\t\tcheckboxes[x].parentElement.style.display = 'none'\r\n\t\t}\r\n\t}\r\n}\r\n//changing active tab color\r\nconst activeFilterTab = (tab = 'all') => {\r\n\tconst tabs = document.querySelector('.card-container-footer-categories').children\r\n\tfor (let x = 0; x < tabs.length; x++) {\r\n\t\ttabs[x].classList.remove('current-tab')\r\n\t}\r\n\tdocument.getElementById(`task-filter-${tab}`).classList.add('current-tab')\r\n}\r\nactiveFilterTab()\r\n\r\n\r\n//DARK/LIGHT MODE TOGGLE\r\n\r\nlet theme = localStorage.getItem('theme')\r\nconst themeToggler = document.querySelector('.theme-toggle')\r\n\r\nconst toggleLightMode = () => {\r\n\tdocument.body.classList.add('light-mode')\r\n\tlocalStorage.setItem('theme', 'light')\r\n\tthemeToggler.innerHTML = '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fill-rule=\"evenodd\" d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"/></svg>'\r\n}\r\nconst toggleDarkMode = () => {\r\n\tdocument.body.classList.remove('light-mode')\r\n\tlocalStorage.setItem('theme', 'dark')\r\n\tthemeToggler.innerHTML = '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fill-rule=\"evenodd\" d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"/></svg>'\r\n}\r\nthemeToggler.addEventListener('click', () => {\r\n\ttheme = localStorage.getItem('theme')\r\n\tif (theme === 'dark') {\r\n\t\ttoggleLightMode()\r\n\t} else {\r\n\t\ttoggleDarkMode()\r\n\t}\r\n})\r\n\r\n//checking for default theme preference, if none, sets light mode\r\nconst themePreference = window.matchMedia('(prefers-color-scheme: dark)').media\r\nif (themePreference === 'dark') {\r\n\ttoggleDarkMode()\r\n} else {\r\n\ttoggleLightMode()\r\n}"]}